name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # ---- Build Job ----
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn clean package --no-transfer-progress
        env:
          PORT: 8080
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpassword
          MAIL_HOST: smtp.example.com
          MAIL_USERNAME: test@example.com
          MAIL_PASSWORD: password123
          MAIL_PORT: 587
          GOOGLE_CLIENT_ID: dummy-id
          GOOGLE_CLIENT_SECRET: dummy-secret
          GOOGLE_REDIRECT_URI: http://localhost:8080/oauth2/callback/google
          AWS_ACCESS_KEY: fakeaccesskey
          AWS_SECRET_KEY: fakesecretkey
          AWS_S3_BUCKET: test-bucket
          AWS_REGION: us-east-1
          JWT_SECRET_KEY: secret123

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/*.jar

  # ---- Dockerize Job ----
  dockerize:
    needs: build  # Wait for the 'build' job to complete
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: target/

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker image with Jib
        run: mvn jib:build
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  # ---- Deploy Job ----
  deploy:
    needs: dockerize  # Wait for the 'dockerize' job to complete
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Koyeb
        uses: koyeb/actions/deploy@v1
        with:
          app_id: ${{ secrets.KOYEB_APP_ID }}
          api_key: ${{ secrets.KOYEB_API_KEY }}
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
          envs: |
            PORT=${{ secrets.PORT }}
            SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            MAIL_HOST=${{ secrets.MAIL_HOST }}
            MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
            MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
            MAIL_PORT=${{ secrets.MAIL_PORT }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}
            AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
            AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
