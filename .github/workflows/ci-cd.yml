name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # ---- Build and Dockerize Job ----
  build-and-dockerize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build and compile
        run: mvn clean compile --no-transfer-progress -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker image with Jib
        run: mvn jib:build
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  # ---- Deploy Job ----
  deploy-to-elastic-beanstalk:
    name: Deploy to Elastic Beanstalk
    needs: build-and-dockerize
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Set Elastic Beanstalk Environment Properties
      - name: Set Elastic Beanstalk Environment Properties
        run: |
          aws elasticbeanstalk update-environment \
            --application-name "${{ secrets.EB_APP_NAME }}" \
            --environment-name "${{ secrets.EB_ENV_NAME }}" \
            --option-settings \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=SPRING_DATASOURCE_URL,Value="${{ secrets.SPRING_DATASOURCE_URL }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=SPRING_DATASOURCE_USERNAME,Value="${{ secrets.SPRING_DATASOURCE_USERNAME }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=SPRING_DATASOURCE_PASSWORD,Value="${{ secrets.SPRING_DATASOURCE_PASSWORD }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=MAIL_HOST,Value="${{ secrets.MAIL_HOST }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=MAIL_USERNAME,Value="${{ secrets.MAIL_USERNAME }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=MAIL_PASSWORD,Value="${{ secrets.MAIL_PASSWORD }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=MAIL_PORT,Value="${{ secrets.MAIL_PORT }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=GOOGLE_CLIENT_ID,Value="${{ secrets.GOOGLE_CLIENT_ID }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=GOOGLE_CLIENT_SECRET,Value="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=GOOGLE_REDIRECT_URI,Value="${{ secrets.GOOGLE_REDIRECT_URI }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=JWT_SECRET_KEY,Value="${{ secrets.JWT_SECRET_KEY }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=JWT_EXPIRATION,Value="${{ secrets.JWT_EXPIRATION }}"

      # Deploy to Elastic Beanstalk using beanstalk-deploy action
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APP_NAME }}
          environment_name: ${{ secrets.EB_ENV_NAME }}
          version_label: "build-${{ github.run_number }}-${{ github.sha }}"
          region: ${{ secrets.AWS_REGION }}
          deployment_package: Dockerrun.aws.json
