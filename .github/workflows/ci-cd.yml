name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # ---- Build and Dockerize Job ----
  build-and-dockerize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
      - name: Build and compile
        run: mvn clean compile --no-transfer-progress -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker image with Jib
        run: mvn jib:build
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  # ---- Deploy Job ----
  deploy-to-aws:
    needs: build-and-dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install AWS Elastic Beanstalk CLI
        run: |
          pip install --upgrade --user awsebcli
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        shell: bash

      - name: Initialize Elastic Beanstalk Application
        run: |
          if [ ! -d ".elasticbeanstalk" ]; then
            eb init "${{ secrets.EB_APP_NAME }}" \
              --platform "Docker running on 64bit Amazon Linux 2" \
              --region "${{ secrets.AWS_REGION }}"
          fi
        shell: bash

      - name: Deploy to Elastic Beanstalk
        run: |
          eb deploy "${{ secrets.EB_ENV_NAME }}" --staged
        shell: bash