server:
  port: 8080
  tomcat:
    max-swallow-size: -1
  forward-headers-strategy: framework


spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      idle-timeout: 300000
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration/public
    default-schema: public
  jpa:
    properties:
      hibernate:
        multiTenancy: SCHEMA
        format_sql: true
        use_sql_comments: true
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 60000
      lettuce:
        pool:
          max-active: 10
          max-idle: 5
          min-idle: 1
          max-wait: -1ms

  servlet:
    multipart:
      max-file-size: 80MB
      max-request-size: 160MB

  mail:
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          timeout: 5000
          auth: true
          connectiontimeout: 5000
          writetimeout: 5000
    host: ${MAIL_HOST}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    port: ${MAIL_PORT:587}
  freemarker:
    template-loader-path: classpath:/mail-templates
    suffix: .ftl

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: ${GOOGLE_REDIRECT_URI}
            scope: email, profile
#          facebook:
#            clientId: ${FACEBOOK_CLIENT_ID}
#            clientSecret: ${FACEBOOK_CLIENT_SECRET}
#            redirectUri: ${FACEBOOK_REDIRECT_URI}
#            scope: email, public_profile

aws:
  access: ${AWS_ACCESS_KEY_ID}
  secret: ${AWS_SECRET_ACCESS_KEY}
  s3:
    bucket: receipt-bucket-gp
    region: us-east-2

# logging config
logging:
  level:
    software:
      amazon:
        awssdk: DEBUG
    root: INFO
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql: TRACE
      springframework:
        web: DEBUG
        security: DEBUG
  file:
    name: /var/log/eb-docker/receipt-backend.log

# App Custom Properties

myapp:

  appName: spring security OAuth2 and JWT starter example
  officialCompanyName: XYZ-Company Inc.
  officialCompanyDomain: https://example.com
  tenant-migration-location: classpath:db/migration/tenant

  mail:
    defaultEmailAddress: example@gmail.com
    verificationCodeExpirationSeconds: 1800 # 30 minutes


  cors:
    allowedOrigins: ${CORS_ALLOWED_ORIGINS:http://localhost:8080}


  oauth2:
    authorizedRedirectOrigins: http://localhost:8080,http://localhost:4200

  defaults:
    defaultPageStart: 0
    defaultPageSize: 50

  jwtSecret: ${JWT_SECRET_KEY}
  jwtExpirationMs: 86400000
  jwtRefreshExpirationMs: 864000000

  ocr:
    base-url: http://ocr-app-env.eba-qcbqmhrp.us-east-2.elasticbeanstalk.com
